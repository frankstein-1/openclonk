<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
<!DOCTYPE doc SYSTEM "../../clonk.dtd">
<?xml-stylesheet type="text/xsl" href="../../clonk.xsl"?>
<doc>
<title>Die For-Schleife</title>
<h>Die for-Schleife</h>
<part>
<text>Die <code>for</code>-Schleife stellt eine recht komfortable Schleife mit Anfangsbedingung dar. Am
häufigsten wird sie als sog. <a href="#Zaehlschleife">Zählschleife</a> benutzt. Sie nimmt 3
Anweisungen als Parameter, die jeweils mit einem Strichpunkt ';' getrennt sind. Darauf folgt der
auszuführende Teil:
</text>
<code>for([Initialisierung]; [Bedingung]; [Inkrementierung]))
  [Auszuführende Anweisung];
</code>
<text>
<ul>
<li>Die Anweisung im ersten Parameter wird einmalig beim Eintritt in die Schleife ausgeführt. Hier
werden ggf. Variablen vor Eintritt in die Schleife initialisiert.</li>
<li>Im zweiten Parameter wird eine Ausführbedingung übergeben. Die Schleife wird abgebrochen, wenn
der Ausdruck falsch ist. Er wird vor jedem Schleifendurchlauf geprüft.</li>
<li>Der im dritten Parameter angegebene Ausdruck wird jeweils als letztes ausgeführt. Hier wird
typischerweise z.B. eine Variable für den nächsten Schleifendurchlauf hochgezählt.</li>
</ul>
</text>
<text>Es ist erlaubt, einen oder mehrere dieser Parameter wegzulassen, den Platz zwischen den
Strichpunkten also freizulassen. Wird die Bedingung weggelassen, so wird die Schleife nie
automatisch abgebrochen. (Um die Schleife zu beenden, sollte dann <code>break</code> verwendet
werden.) Auf diese Weise lässt sich z.B. eine Endlosschleife konstruieren: </text>
<code>for(;;)
  <funclink>Log</funclink>("Fl00d!");
</code>

<h id="Zaehlschleife">Gebrauch der for-Schleife als Zählschleife</h>

<text> Am Häufigsten findet die <code>for</code>-Schleife Verwendung als Zählschleife. Will man sich
z.B. alle Zahlen zwischen 1 und 10 ausgeben lassen, so sieht das Script folgendermaßen aus: </text>

<code>for(var i = 1; i &lt;= 10; i++)
  <funclink>Log</funclink>("%d", i);
</code>

<text> Zur Verdeutlichung: Die folgende <funclink>while</funclink>-Schleife tut
exakt dasselbe: </text>

<code>var i = 0;
<funclink>while</funclink>(++i &lt;= 10)
  <funclink>Log</funclink>("%d", i);
</code>

<h id="Arrayschleife">Gebrauch der for-Schleife zum Durchlauf von Arrays</h>

<text> Eine weitere Funktion der <code>for</code>-Schleife ist es, Arrays Element für Element zu durchlaufen
und für einen Durchlauf ein Element in einer Variable zu speichern. Das Script sieht folgendermaßen aus: </text>

<code>for(var element in a)
  <funclink>Log</funclink>("%v", element);
</code>

<text> Mit diesem Script würden alle Elemente des Array <code>a</code> ins Log ausgegeben.</text>

<h>Weitere Beispiele:</h>

<code>for(var i = 10; i &gt;= 1; i--)
  <funclink>Log</funclink>("%d", i);
</code>

<text>
Zählt rückwärts von 10 bis 1.
</text>

</part>
<author>Peter</author><date>Juni 2004</date>
</doc>
