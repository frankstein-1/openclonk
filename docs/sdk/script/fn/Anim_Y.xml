<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
<!DOCTYPE funcs SYSTEM "../../../clonk.dtd">
<?xml-stylesheet type="text/xsl" href="../../../clonk.xsl"?>
<funcs>
  <func>
    <title>Anim_Y</title>
    <category>Animationen</category>
    <version>4.10.0.0 OC</version>
    <syntax>
      <rtype>array</rtype>
      <params>
        <param>
          <type>int</type>
          <name>position</name>
          <desc>Startwert. Sollte innerhalb des von begin und end aufgespannten Intervalls liegen.</desc>
        </param>
        <param>
          <type>int</type>
          <name>begin</name>
          <desc>Beginn des Intervalls.</desc>
        </param>
        <param>
          <type>int</type>
          <name>end</name>
          <desc>Schluss des Intervalls. Wenn end größer als begin ist, so nimmt der Wert mit Bewegung des Objekts in positiver Y-Richtung zu, andernfalls nimmt er ab.</desc>
        </param>
        <param>
          <type>int</type>
          <name>length</name>
          <desc>Anzahl Pixel die in Y-Richtung zurückgelegt werden müssen um die Animation von begin bis nach end durchzuspielen.</desc>
	</param>
      </params>
    </syntax>

    <desc>Der Wert hängt von der Bewegung des Objekts in Y-Richtung ab. Jeder Pixel den sich das Objekt in positiver Y-Richtung bewegt erhöht den Wert etwas, und jeder Pixel in negative Y-Richtung verringert ihn etwas. Wenn end erreicht wurde wird der Wert wieder auf begin zurückgesetzt, und wenn begin erreicht wurde wird er auf end gesetzt.</desc>

    <remark>Siehe die <emlink href="definition/animations.html">Animations-Dokumentation</emlink> für eine Beschreibung des Animationssystems.</remark>

    <examples>
      <example>
        <code><funclink>PlayAnimation</funclink>("Scale", 5, <funclink>Anim_Y</funclink>(0, <funclink>GetAnimationLength</funclink>("Scale"), 0, 15), <funclink>Anim_Const</funclink>(1000));</code>
	<text>Spielt die Animation "Scale" in Slot 5 ab und überlagert dabei eventuelle andere Animationen in Slot 5. Die Animation wird dabei umso schneller abgespielt je schneller sich das Objekt in Y-Richtung bewegt. Nachdem es 15 Pixel zurückgelegt hat ist die Animation einmal von vorne bis hinten durchgespielt worden und fängt wieder von vorne an. Hier wird <funclink>Anim_Y</funclink> anstelle von <funclink>Anim_AbsY</funclink> verwendet, da beim Runterklettern die Animation in die andere Richtung abgespielt werden soll wie beim Raufklettern. begin wurde größer als end gewählt, da die Animation in bei Bewegung in negative Y-Richtung (Raufklettern) vorwärts und bei Bewegung in positive Y-Richtung (Herabklettern) rückwärts abgespielt werden soll.</text>
      </example>
    </examples>

    <related>
      <funclink>PlayAnimation</funclink>
      <funclink>SetAnimationPosition</funclink>
      <funclink>SetAnimationWeight</funclink>
      <funclink>Anim_Const</funclink>
      <funclink>Anim_Linear</funclink>
      <funclink>Anim_X</funclink>
      <funclink>Anim_AbsX</funclink>
      <funclink>Anim_AbsY</funclink>
      <funclink>Anim_XDir</funclink>
      <funclink>Anim_YDir</funclink>
      <funclink>Anim_Action</funclink>
    </related>
  </func>
  <author>Clonk-Karl</author><date>Januar 2010</date>
</funcs>
